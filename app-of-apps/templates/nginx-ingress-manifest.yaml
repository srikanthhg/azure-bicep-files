{{-if .Values.nginx-ingress.enabled -}}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  finalizers:
  - resources-finalizer.argocd.argoproj.io
  name: nginx-ingress
  namespace: argocd
spec:
  project: default
  sources:
  - chart: ingress-nginx
    repoURL: https://kubernetes.github.io/ingress-nginx
    targetRevision: 4.13.1
    helm:
      valueFiles:
        - $values/values.yaml
  - repoURL: https://github.com/srikanthhg/azure-bicep-files.git
    targetRevision: main
    ref: values
  destination:
    server: https://kubernetes.default.svc
    namespace: ingress-nginx
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true

{{-end }}




# finalizers in Kubernetes are like "cleanup locks" — they stop deletion until some specific cleanup task is done.

# In ArgoCD,
# resources-finalizer.argocd.argoproj.io = delete all managed resources before deleting the Application object itself.

# Without it → deleting an Application leaves its workloads (pods, services, etc.) running.

# With it → deleting an Application cleans up everything it deployed.

# metadata:
#   finalizers:
#     - resources-finalizer.argocd.argoproj.io
#     - foregroundDeletion

# When to Use Them Together
# If you want GitOps-style complete cleanup:

# resources-finalizer.argocd.argoproj.io → removes ArgoCD-managed objects

# foregroundDeletion → ensures those objects’ dependents are also removed before the parent object is gone